@{
    Layout = null;
    @model List<BookDeliveryCore.Orders>

}

<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
<link rel="stylesheet" type="text/css" href="https://cdn.datatables.net/1.10.25/css/jquery.dataTables.css">

<!-- DataTables JavaScript -->
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script type="text/javascript" src="https://cdn.datatables.net/1.10.25/js/jquery.dataTables.js"></script>


<div class="row" style="max-width: 100%; padding: 15px;">
    <div class="col-md-12 col-sm-12">
        @if (Model == null || Model.Count == 0)
        {
            <p>No orders available.</p>
        }
        else
        {
            <div>
                <table id="OrdersTable" class="table table-condensed table-hover" style="width: 100%">
                    <thead>
                        <tr>
                            <th scope="col">ORDER ID</th>
                            <th scope="col">Client</th>
                            <th scope="col">Client Phone Number</th>
                            <th scope="col">Client Address</th>
                            <th scope="col">City of Delivery</th>
                            <th scope="col">Client Postal Code</th>
                            <th scope="col">Delivery Agency</th>
                            <th scope="col">Status</th>
                            <th scope="col">Created Date</th>
                            <th scope="col">Estimated Date</th>
                            <th scope="col">Get Order</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var order in Model)
                        {
                            <tr>
                                <td>@order.ORDER_ID</td>
                                <td>@order.CLIENT_FIRSTNAME @order.CLIENT_LASTNAME</td>
                                <td>@order.CLIENT_PHONE</td>
                                <td>@order.CLIENT_ADDRESS</td>
                                <td>@order.CLIENT_CITY</td>
                                <td>@order.CLIENT_POSTALCODE</td>
                                <td>@order.AGENCY_NAME</td>
                                <td>@order.STATUS</td>
                                <td>@order.ORDERDATE</td>
                                <td>@order.ESTIMATE_DT</td>
                                <td>
                                    <button onclick="ViewOrder(this)">
                                        <i class="fa fa-magic" aria-hidden="true"></i>

                                    </button>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        }
    </div>
</div>

<div class="modal fade" id="viewOrderModal" tabindex="-1" aria-labelledby="viewOrderModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="viewOrderModalLabel"></h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form>
                    <div class="mb-3">
                        <label for="orderID" class="form-label">OrderID</label>
                        <input type="text" class="form-control" id="orderID" disabled>
                    </div>
                    <div class="mb-3">
                        <label for="agencyname" class="form-label">Delivery Agency</label>
                        <input type="text" class="form-control" id="agencyname" disabled>
                    </div>
                    <div class="mb-3">
                        <label for="clientName" class="form-label">Client </label>
                        <input type="text" class="form-control" id="clientName" disabled>
                    </div>

                    <div class="mb-3">
                        <label for="city" class="form-label">City of Delivery</label>
                        <input type="text" class="form-control" id="city" disabled>
                    </div>
                    <div class="mb-3">
                        <label for="address" class="form-label">Delivery Address</label>
                        <input type="text" class="form-control" id="address" disabled>
                    </div>
                    <div class="mb-3">
                        <label for="postal" class="form-label">Postal Code</label>
                        <input type="text" class="form-control" id="postal" disabled>
                    </div>
                    <div class="mb-3">
                        <label for="phone" class="form-label">Client Phone Number</label>
                        <input type="text" class="form-control" id="phone" disabled>
                    </div>
                    <div class="mb-3">
                        <label for="orderdt" class="form-label">Created Date</label>
                        <input type="text" class="form-control" id="orderdt" disabled>
                    </div>
                    <div class="mb-3">
                        <label for="eddt" class="form-label">Estimated Delivery Date</label>
                        <input type="date" class="form-control" id="eddt">
                    </div>
                    <div class="mb-3">
                        <label for="deldt" class="form-label">Order Items</label>
                        <div id="ItemResult"></div>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                <button id="saveChangesBtn" type="button" class="btn btn-primary">Accept Order</button>
            </div>
        </div>
    </div>
</div>


<script>
    $(document).ready(function () {

        // Get today's date
        var today = new Date();

        // Calculate one month from today
        var maxDate = new Date(today);
        maxDate.setMonth(maxDate.getMonth() + 1);

        // Format the maximum date as yyyy-mm-dd
        var maxDateString = maxDate.toISOString().split('T')[0];

        // Set the max attribute of the input field to restrict selection
        $('#eddt').attr('max', maxDateString);

        // Format the minimum date as yyyy-mm-dd
        var minDateString = today.toISOString().split('T')[0];

        // Set the min attribute of the input field to restrict selection
        $('#eddt').attr('min', minDateString);

        $('#OrdersTable').DataTable({
            paging: true,
            pagingType: 'simple_numbers',
            searching: false,
            pageLength: 15,
            dom: 'frtip',
            language: {
                thousands: ",",
                decimal: "."
            },
            responsive: false,
            scrollX: true,
            columnDefs: [
                { className: 'dt-body-left', targets: '_all' }
            ]
        });
    });

    function ViewOrder(button) {
        var row = button.parentNode.parentNode; // Get the row
        var cells = row.getElementsByTagName("td");
        var orderData = {
            orderid: cells[0].innerText,
            clname: cells[1].innerText,
            clphone: cells[2].innerText,
            claddress: cells[3].innerText,
            clcity: cells[4].innerText,
            clpostalcode: cells[5].innerText,
            agencyname: cells[6].innerText,
            status: cells[7].innerText,
            orderdt: cells[8].innerText,
            eddt: cells[9].innerText
        };

        if (orderData.eddt !== "") {
            $('#eddt').prop('disabled', true);
        } else {
            $('#eddt').prop('disabled', false);
        }

        console.log(orderData);
        editOrderModal(orderData)
    }

    function editOrderModal(orderData) {
        $.ajax({
            type: "POST",
            url: "@Url.Action("SearchOrderItems", "Menu")",
            contentType: "application/json; charset=utf-8",
            data: JSON.stringify({ 'OrderID': orderData.orderid }),
            async: false,
            success: function (response) {
                $('#ItemResult').html(response);
            },
            error: function (xhr, status, error) {
                alert(error);
            }
        });
        $('#viewOrderModalLabel').text("Order -" + orderData.orderid);

        $('#orderID').val(orderData.orderid);
        $('#agencyname').val(orderData.agencyname);
        $('#clientName').val(orderData.clname);
        $('#city').val(orderData.clcity);
        $('#address').val(orderData.claddress);
        $('#postal').val(orderData.clpostalcode);
        $('#phone').val(orderData.clphone);
        $('#orderdt').val(orderData.orderdt);
        if(orderData.eddt !=""){
        var datetimeString = orderData.eddt;
        var parts = datetimeString.split(" "); // Split the string into date and time parts
        var dateStringParts = parts[0].split("/"); // Split the date part into day, month, and year
        var timeStringParts = parts[1].split(":"); // Split the time part into hours, minutes, and seconds

        // Create a Date object from the parsed parts
        var date = new Date(dateStringParts[2], dateStringParts[1] - 1, dateStringParts[0]); // Months are zero-based in JavaScript Date objects

        // Get the year, month, and day from the Date object
        var year = date.getFullYear();
        var month = String(date.getMonth() + 1).padStart(2, '0'); // Adding 1 because getMonth() returns zero-based months
        var day = String(date.getDate()).padStart(2, '0');

        // Create the date string in the format YYYY-MM-DD
        var dateString = year + '-' + month + '-' + day;

        // Set the value of the input element with id "eddt"
        $('#eddt').val(dateString);
        }
        else{
            $('#eddt').val(orderData.eddt);
        }



        $('#viewOrderModal').modal('show');
        $('#saveChangesBtn').on('click', function () {
            saveChanges(orderData);
        });
    }

    function saveChanges(orderData) {
        var orderID = orderData.orderid;
        var eddt;

            eddt = $('#eddt').val();
            if(eddt ==""){
            Swal.fire({
                icon: 'warning',
                title: 'Please select estimated dates'
            });
            }
            else{
            $.ajax({
                type: "POST",
                url: "@Url.Action("AcceptOrderCourier", "Courier")",
                contentType: "application/json; charset=utf-8",

                // Pass only the 'username' parameter
                data: JSON.stringify({ 'OrderID': orderID, 'EDD': eddt }),
                async: false,
                success: function (response) {
                    Swal.fire({
                        title: 'Order Accepted!',
                        icon: 'success',
                        confirmButtonText: 'OK',
                    }).then((result) => {
                        if (result.isConfirmed) {
                            console.log(response);
                            location.reload();
                        }
                    });
                },
                error: function (xhr, status, error) {
                    alert(error);
                }
            });
            }
       

        // Close modal after saving changes
        $('#viewOrderModal').modal('hide');
        //TODO FIX LATER
        //window.location.href = '@Url.Action("AdminModule", "Menu", new { select = "ADMI" })';

    }


</script>